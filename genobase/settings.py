"""
Django settings for genobase project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os


# Import local .env file to os environment variables
from dotenv import load_dotenv
load_dotenv()


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&h5^1cf7m9z#d63ojzpier8z-0&bb^m&@8rpj!*y#wzgug&i7)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
CATCH_ALL_EXCEPTIONS = True
DEBUG_PROPAGATE_EXCEPTIONS = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'async_job',
    'genobase',
    'gene',
    'gene_parser',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'genobase.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'genobase.wsgi.application'


def str_to_bool(var):
    if isinstance(var, bool):
        return var
    if not isinstance(var, str):
        raise ValueError('Not a string')
    return var.lower() == 'true'


IS_DOCKER = str_to_bool(os.getenv('IS_DOCKER', 'false'))

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

PSQL_USER = os.environ['PSQL_USER']
PSQL_PWD = os.environ['PSQL_PWD']
PSQL_DB = os.environ['PSQL_DB']
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': PSQL_DB,
        'USER': PSQL_USER,
        'PASSWORD': PSQL_PWD,
        'HOST': 'postgres' if IS_DOCKER else 'localhost',
        'PORT': '5432',
    }
}

DEFAULT_LOGGER = 'default'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        DEFAULT_LOGGER: {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# Celery

CELERY_TASK_ALWAYS_EAGER = False
CELERY_TASK_CALL_DIRECT = False
RMQ_USER = os.environ['RMQ_USER']
RMQ_PWD = os.environ['RMQ_PWD']
CELERY_BROKER_URL = 'amqp://{user}:{pwd}@{host}:5672'.format(
    user=RMQ_USER,
    pwd=RMQ_PWD,
    host='rabbit' if IS_DOCKER else 'localhost'
)
CELERY_RESULT_BACKEND = 'amqp://{user}:{pwd}@{host}:5672'.format(
    user=RMQ_USER,
    pwd=RMQ_PWD,
    host='rabbit' if IS_DOCKER else 'localhost'
)
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
